{"version":3,"sources":["device.js"],"names":["addClass","documentElement","find","handleOrientation","hasClass","orientationEvent","removeClass","userAgent","previousDevice","window","device","document","navigator","toLowerCase","ios","iphone","ipod","ipad","windows","android","androidPhone","androidTablet","blackberry","blackberryPhone","blackberryTablet","windowsPhone","windowsTablet","fxos","fxosPhone","fxosTablet","meego","cordova","location","protocol","nodeWebkit","process","mobile","tablet","desktop","television","i","length","portrait","innerHeight","innerWidth","landscape","noConflict","this","needle","indexOf","className","regex","RegExp","match","currentClassNames","replace","Object","prototype","hasOwnProperty","call","addEventListener","attachEvent","define","amd","module","exports"],"mappings":"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","file":"device.min.js","sourcesContent":["// Device.js\n// (c) 2014 Matthew Hudson\n// Device.js is freely distributable under the MIT license.\n// For all details and documentation:\n// http://matthewhudson.me/projects/device.js/\n\n(function() {\n\n  var device,\n    previousDevice,\n    addClass,\n    documentElement,\n    find,\n    handleOrientation,\n    hasClass,\n    orientationEvent,\n    removeClass,\n    userAgent;\n\n  // Save the previous value of the device variable.\n  previousDevice = window.device;\n\n  device = {};\n\n  // Add device as a global object.\n  window.device = device;\n\n  // The <html> element.\n  documentElement = window.document.documentElement;\n\n  // The client user agent string.\n  // Lowercase, so we can use the more efficient indexOf(), instead of Regex\n  userAgent = window.navigator.userAgent.toLowerCase();\n\n  // Main functions\n  // --------------\n\n  device.ios = function () {\n    return device.iphone() || device.ipod() || device.ipad();\n  };\n\n  device.iphone = function () {\n    return !device.windows() && find('iphone');\n  };\n\n  device.ipod = function () {\n    return find('ipod');\n  };\n\n  device.ipad = function () {\n    return find('ipad');\n  };\n\n  device.android = function () {\n    return !device.windows() && find('android');\n  };\n\n  device.androidPhone = function () {\n    return device.android() && find('mobile');\n  };\n\n  device.androidTablet = function () {\n    return device.android() && !find('mobile');\n  };\n\n  device.blackberry = function () {\n    return find('blackberry') || find('bb10') || find('rim');\n  };\n\n  device.blackberryPhone = function () {\n    return device.blackberry() && !find('tablet');\n  };\n\n  device.blackberryTablet = function () {\n    return device.blackberry() && find('tablet');\n  };\n\n  device.windows = function () {\n    return find('windows');\n  };\n\n  device.windowsPhone = function () {\n    return device.windows() && find('phone');\n  };\n\n  device.windowsTablet = function () {\n    return device.windows() && (find('touch') && !device.windowsPhone());\n  };\n\n  device.fxos = function () {\n    return (find('(mobile;') || find('(tablet;')) && find('; rv:');\n  };\n\n  device.fxosPhone = function () {\n    return device.fxos() && find('mobile');\n  };\n\n  device.fxosTablet = function () {\n    return device.fxos() && find('tablet');\n  };\n\n  device.meego = function () {\n    return find('meego');\n  };\n\n  device.cordova = function () {\n    return window.cordova && location.protocol === 'file:';\n  };\n\n  device.nodeWebkit = function () {\n    return typeof window.process === 'object';\n  };\n\n  device.mobile = function () {\n    return device.androidPhone() || device.iphone() || device.ipod() || device.windowsPhone() || device.blackberryPhone() || device.fxosPhone() || device.meego();\n  };\n\n  device.tablet = function () {\n    return device.ipad() || device.androidTablet() || device.blackberryTablet() || device.windowsTablet() || device.fxosTablet();\n  };\n\n  device.desktop = function () {\n    return !device.tablet() && !device.mobile();\n  };\n\n  device.television = function() {\n    var i, television = [\n      \"googletv\",\n      \"viera\",\n      \"smarttv\",\n      \"internet.tv\",\n      \"netcast\",\n      \"nettv\",\n      \"appletv\",\n      \"boxee\",\n      \"kylo\",\n      \"roku\",\n      \"dlnadoc\",\n      \"roku\",\n      \"pov_tv\",\n      \"hbbtv\",\n      \"ce-html\"\n    ];\n\n    i = 0;\n    while (i < television.length) {\n      if (find(television[i])) {\n        return true;\n      }\n      i++;\n    }\n    return false;\n  };\n\n  device.portrait = function () {\n    return (window.innerHeight / window.innerWidth) > 1;\n  };\n\n  device.landscape = function () {\n    return (window.innerHeight / window.innerWidth) < 1;\n  };\n\n  // Public Utility Functions\n  // ------------------------\n\n  // Run device.js in noConflict mode,\n  // returning the device variable to its previous owner.\n  device.noConflict = function () {\n    window.device = previousDevice;\n    return this;\n  };\n\n  // Private Utility Functions\n  // -------------------------\n\n  // Simple UA string search\n  find = function (needle) {\n    return userAgent.indexOf(needle) !== -1;\n  };\n\n  // Check if documentElement already has a given class.\n  hasClass = function (className) {\n    var regex;\n    regex = new RegExp(className, 'i');\n    return documentElement.className.match(regex);\n  };\n\n  // Add one or more CSS classes to the <html> element.\n  addClass = function (className) {\n    var currentClassNames = null;\n    if (!hasClass(className)) {\n      currentClassNames = documentElement.className.replace(/^\\s+|\\s+$/g, '');\n      documentElement.className = currentClassNames + \" \" + className;\n    }\n  };\n\n  // Remove single CSS class from the <html> element.\n  removeClass = function (className) {\n    if (hasClass(className)) {\n      documentElement.className = documentElement.className.replace(\" \" + className, \"\");\n    }\n  };\n\n  // HTML Element Handling\n  // ---------------------\n\n  // Insert the appropriate CSS class based on the _user_agent.\n\n  if (device.ios()) {\n    if (device.ipad()) {\n      addClass(\"ios ipad tablet\");\n    } else if (device.iphone()) {\n      addClass(\"ios iphone mobile\");\n    } else if (device.ipod()) {\n      addClass(\"ios ipod mobile\");\n    }\n  } else if (device.android()) {\n    if (device.androidTablet()) {\n      addClass(\"android tablet\");\n    } else {\n      addClass(\"android mobile\");\n    }\n  } else if (device.blackberry()) {\n    if (device.blackberryTablet()) {\n      addClass(\"blackberry tablet\");\n    } else {\n      addClass(\"blackberry mobile\");\n    }\n  } else if (device.windows()) {\n    if (device.windowsTablet()) {\n      addClass(\"windows tablet\");\n    } else if (device.windowsPhone()) {\n      addClass(\"windows mobile\");\n    } else {\n      addClass(\"desktop\");\n    }\n  } else if (device.fxos()) {\n    if (device.fxosTablet()) {\n      addClass(\"fxos tablet\");\n    } else {\n      addClass(\"fxos mobile\");\n    }\n  } else if (device.meego()) {\n    addClass(\"meego mobile\");\n  } else if (device.nodeWebkit()) {\n    addClass(\"node-webkit\");\n  } else if (device.television()) {\n    addClass(\"television\");\n  } else if (device.desktop()) {\n    addClass(\"desktop\");\n  }\n\n  if (device.cordova()) {\n    addClass(\"cordova\");\n  }\n\n  // Orientation Handling\n  // --------------------\n\n  // Handle device orientation changes.\n  handleOrientation = function () {\n    if (device.landscape()) {\n      removeClass(\"portrait\");\n      addClass(\"landscape\");\n    } else {\n      removeClass(\"landscape\");\n      addClass(\"portrait\");\n    }\n  };\n\n  // Detect whether device supports orientationchange event,\n  // otherwise fall back to the resize event.\n  if (Object.prototype.hasOwnProperty.call(window, \"onorientationchange\")) {\n    orientationEvent = \"orientationchange\";\n  } else {\n    orientationEvent = \"resize\";\n  }\n\n  // Listen for changes in orientation.\n  if (window.addEventListener) {\n    window.addEventListener(orientationEvent, handleOrientation, false);\n  } else if (window.attachEvent) {\n    window.attachEvent(orientationEvent, handleOrientation);\n  } else {\n    window[orientationEvent] = handleOrientation;\n  }\n\n  handleOrientation();\n\n  if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    define(function() {\n      return device;\n    });\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = device;\n  } else {\n    window.device = device;\n  }\n\n}).call(this);"]}